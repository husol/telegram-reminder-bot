// Code generated by MockGen. DO NOT EDIT.
// Source: settimezone_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSetTimezoneServicer is a mock of SetTimezoneServicer interface
type MockSetTimezoneServicer struct {
	ctrl     *gomock.Controller
	recorder *MockSetTimezoneServicerMockRecorder
}

// MockSetTimezoneServicerMockRecorder is the mock recorder for MockSetTimezoneServicer
type MockSetTimezoneServicerMockRecorder struct {
	mock *MockSetTimezoneServicer
}

// NewMockSetTimezoneServicer creates a new mock instance
func NewMockSetTimezoneServicer(ctrl *gomock.Controller) *MockSetTimezoneServicer {
	mock := &MockSetTimezoneServicer{ctrl: ctrl}
	mock.recorder = &MockSetTimezoneServicerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSetTimezoneServicer) EXPECT() *MockSetTimezoneServicerMockRecorder {
	return m.recorder
}

// SetTimeZone mocks base method
func (m *MockSetTimezoneServicer) SetTimeZone(chatID int, timezone string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetTimeZone", chatID, timezone)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetTimeZone indicates an expected call of SetTimeZone
func (mr *MockSetTimezoneServicerMockRecorder) SetTimeZone(chatID, timezone interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTimeZone", reflect.TypeOf((*MockSetTimezoneServicer)(nil).SetTimeZone), chatID, timezone)
}
